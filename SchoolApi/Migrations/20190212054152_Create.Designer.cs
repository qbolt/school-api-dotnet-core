// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolApi.Data;

namespace SchoolApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190212054152_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SchoolApi.Data.Entities.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MajorText");

                    b.HasKey("Id");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("SchoolApi.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gpa");

                    b.Property<int?>("StudentMajorId");

                    b.HasKey("Id");

                    b.HasIndex("StudentMajorId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolApi.Data.Entities.Student", b =>
                {
                    b.HasOne("SchoolApi.Data.Entities.Major", "StudentMajor")
                        .WithMany()
                        .HasForeignKey("StudentMajorId");
                });
#pragma warning restore 612, 618
        }
    }
}
